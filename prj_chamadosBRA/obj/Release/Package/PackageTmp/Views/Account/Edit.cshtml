@model prj_chamadosBRA.Models.ApplicationUser

@{
    ViewBag.Title = "Alteração";
}

<h2>Alteração</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuário</h4>
        <div class="row">
            <div class="col-md-2"><input type="submit" value="Salvar" class="btn btn-default" /></div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chapa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Chapa, new { htmlAttributes = new { @class = "form-control", title= "Informação referente a obra CAV" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contato, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PerfilUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.PerfilUsuario != null)
                {
                    @Html.DropDownList("PerfilUsuario", null, new { @class = "form-control" })
                    @*@Html.DropDownList("PerfilUsuario", (IEnumerable<SelectListItem>)ViewBag.PerfilUsuario, new { @class = "form-control" })*@
                }
                else
                {
                    @Html.DropDownList("PerfilUsuario", (IEnumerable<SelectListItem>)ViewBag.PerfilUsuario, "-- Selecione o Perfil --", new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.PerfilUsuario, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(m => m.Superior, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Superior", new SelectList(string.Empty, "Id", "Nome"), Model.Superior == null ? "-- Selecione o setor do usuario --" : (string)ViewBag.SuperiorSelecionado, new { @class = "form-control" })                
                <div style="color:gray">@("Para alterar o superior selecione obra e setor.")</div>
                @Html.ValidationMessageFor(model => model.Superior, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EnvioEmailSuperior, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.EnvioEmailSuperior.Value, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EnvioEmailSuperior, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (Session["PerfilUsuario"].ToString().Equals("1") || Session["PerfilUsuario"].ToString().Equals("6") || Session["PerfilUsuario"].ToString().Equals("9"))
        {
            <div class="form-group">
                @Html.Label("Obras", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ObrasDisponiveis", (IEnumerable<SelectListItem>)ViewBag.ObrasDisponiveis, "-- Selecione a Obra --", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Setores", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SetoresDisponiveis", (IEnumerable<SelectListItem>)ViewBag.SetoresDisponiveis, "-- Selecione a Obra Primeiro --", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <button class="btn btn-default adicionarobrasetor" type="button" data-id="Model.Id">Adicionar Obra/Setor</button>
                    @*@Html.ActionLink("Adicionar Obra/Setor", "AdicionarObraSetorUsuario", new { id = Model.Id }, new { @class = "btn btn-default" })*@
                </div>
            </div>

                <div class="panel panel-default">
                    <div class="panel-heading">Obras do Usuario</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-10">
                                <table class="table" data-row-style="rowStyle">
                                    <tr>
                                        <th>
                                            @Html.DisplayName("Nome Obra")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Eliminar")
                                        </th>
                                    </tr>

                                    @foreach (var item in ((List<prj_chamadosBRA.Models.UsuarioObra>)ViewBag.ObrasUsuario))
                                    {
                                        <tr>
                                            <td>
                                                @item.Obra.Descricao
                                            </td>
                                            <td>
                                                @Html.ActionLink("Eliminar", "EliminarUsuarioObra", new { id = @item.idUsuarioObra })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">Setores do Usuario</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-10">
                                <table class="table" data-row-style="rowStyle">
                                    <tr>
                                        <th>
                                            @Html.DisplayName("Nome Setor")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Nome Obra")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Eliminar")
                                        </th>
                                    </tr>

                                    @foreach (var item in ((List<prj_chamadosBRA.Models.UsuarioSetor>)ViewBag.SetorUsuario))
                                    {
                                        <tr>
                                            <td>
                                                @item.Setor.Descricao
                                            </td>
                                            <td>
                                                @item.Setor.obra.Descricao
                                            </td>
                                            <td>
                                                @Html.ActionLink("Eliminar", "EliminarUsuarioSetor", new { id = @item.idUsuarioSetor })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index", "Account", new { @class = "btn btn-default" })
</div>
@Html.Hidden("notice", @TempData["notice"])
@if (TempData["notice"] != null)
{
    <div id="modalNotice" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Mensagem</h4>
                </div>
                <div class="modal-body">
                    <p class="text-success"><strong>@TempData["notice"]</strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>

        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#ObrasDisponiveis").change(function () {
                $("#SetoresDisponiveis").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaSetoresPorObra", "Account")',
                    dataType: 'json',
                    data: { selectedValue: $("#ObrasDisponiveis").val() },
                    success: function (setores) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#SetoresDisponiveis").append('<option value="">-- Selecione o Setor --</option>');
                        $.each(setores, function (i, setor) {
                            $("#SetoresDisponiveis").append('<option value="'
                            + setor.Value + '">'
                            + setor.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve setores.' + ex);
                    }
                });
                return false;
            })
            $(function () {
                $(".adicionarobrasetor").click(function () {
                    var id = $('#Id').val();
                    var obra = $('#ObrasDisponiveis').val();
                    var setor = $('#SetoresDisponiveis').val();
                    var url = '@Url.Action("AdicionarObraSetorUsuario", "Account", new { idUser = "__id__", obra = "__obra__", setor = "__setor__" })';
                    window.location.href = url.replace('__id__&amp;', id + '&').replace('__obra__&amp;', obra + '&').replace('__setor__', setor);
                });
            })
            $("#SetoresDisponiveis").change(function () {
                $("#Superior").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaSuperioresPorSetor", "Account")',
                    dataType: 'json',
                    data: { selectedValue: $("#SetoresDisponiveis").val() },
                    success: function (superiores) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Superior").append('<option value="">-- Selecione o Superior --</option>');
                        $.each(superiores, function (i, superior) {
                            $("#Superior").append('<option value="'
                            + superior.Value + '">'
                            + superior.Text + '</option>');
                        });
                        if("@Model.Superior" != null){
                            $("#Superior").val("@Model.Superior");
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve setores.' + ex);
                    }
                });
                return false;
            })
        });
        $(window).load(function () {
            if ($('#notice').val() != "") {
                //alert($('#notice').val());
                $('#modalNotice').modal({ show: true });
            }
        });
    </script>
}
