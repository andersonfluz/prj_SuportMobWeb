@model prj_chamadosBRA.Models.RegisterViewModel
@{
    ViewBag.Title = "Registro";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Crie uma nova conta.</h4>
    <hr />
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Usuario", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Senha", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Confirmar Senha", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Perfil", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.perfil, new SelectList(new prj_chamadosBRA.Repositories.PerfilUsuarioDAO().BuscarPerfis(), "IdPerfil", "Descricao"), new { @class = "form-control" })
            @*@Html.DropDownList("Perfis", "---- Selecione ----")*@
            @Html.ValidationMessageFor(m => m.perfil)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Obra", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.obra, new SelectList(new prj_chamadosBRA.Repositories.ObraDAO().BuscarObras(), "IDO", "Descricao"), new { @class = "form-control obra" })
            @Html.ValidationMessageFor(m => m.obra)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Setor", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("setores", new SelectList(string.Empty, "Id", "Nome"), "-- Selecione o Setor --", new { @class = "form-control setores" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Contato, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Contato, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Registrar" />
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $(".obra").change(function () {
            $("#setores").empty();            
            $.ajax({
                type: 'POST',
                url: '@Url.Action("RetornaSetoresPorObra", "Account")',
                dataType: 'json',
                data: { selectedValue: $("#obra").val() },
                success: function (setores) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(setores, function (i, setor) {
                        $("#setores").append('<option value="'
                        + setor.Value + '">'
                        + setor.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve setores.' + ex);
                }
            });
            return false;
        })
    });
    </script>
}


