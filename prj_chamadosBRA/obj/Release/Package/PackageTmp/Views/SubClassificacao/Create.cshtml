@model prj_chamadosBRA.Models.ChamadoSubClassificacao

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ChamadoSubClassificacao</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>
        @if ((bool)Session["ObraVisivel"])
        {
            <div class="form-group">
                @Html.Label("Obra", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Obra", new SelectList(ViewBag.Obras, "IDO", "Descricao"), "-- Selecione a Obra --", new { @class = "form-control" })
                </div>
            </div>
        }
        @if ((bool)Session["SetorVisivel"])
        {
            <div class="form-group">
                @Html.Label("Setor", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Setor", new SelectList(string.Empty, "IDO", "Descricao"), "-- Aguardando Selecionar a Obra --", new { @class = "form-control" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.ChamadoClassificacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Classificacao", new SelectList(string.Empty, "Id", "Descricao"), "-- Aguardando Selecionar o Setor --", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar a Lista", "Index")
</div>

@Html.Hidden("notice", @TempData["notice"])
@if (TempData["notice"] != null)
{
    <div id="modalNotice" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Mensagem</h4>
                </div>
                <div class="modal-body">
                    <p class="text-success"><strong>@TempData["notice"]</strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>

        </div>
    </div>
}

@section scripts{
    <script>
        $(window).load(function () {
            if ($('#notice').val() != "") {
                //alert($('#notice').val());
                $('#modalNotice').modal({ show: true });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#Setor").change(function () {
                $("#Classificacao").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaClassificacaoPorSetor", "SubClassificacao")',
                    dataType: 'json',
                    data: { selectedValue: $("#Setor").val() },
                    success: function (classificacoes) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Classificacao").append('<option value="">-- Selecione a Classificacao --</option>');
                        $.each(classificacoes, function (i, classificacao) {
                            $("#Classificacao").append('<option value="'
                            + classificacao.Value + '">'
                            + classificacao.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }
                });
            });
            $("#Obra").change(function () {
                $("#Setor").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaSetoresPorObra", "SubClassificacao")',
                    dataType: 'json',
                    data: { selectedValue: $("#Obra").val() },
                    success: function (setores) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Setor").append('<option value="">-- Selecione o Setor --</option>');
                        $.each(setores, function (i, setor) {
                            $("#Setor").append('<option value="'
                            + setor.Value + '">'
                            + setor.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }
                });
            });
        });
    </script>
}
