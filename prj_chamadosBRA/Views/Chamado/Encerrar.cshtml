@model prj_chamadosBRA.Models.EncerramentoChamadoViewModel

@{
    Layout = null;
    ViewBag.Title = "Encerrar";
}

<div class="modal-dialog">
    <div class="modal-content">
        @using (Html.BeginForm("Encerrar", "Chamado", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "encerrar" }))
        {
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Encerrar Chamado N. @Model.Id</h4>
            </div>

            @Html.AntiForgeryToken()

            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.StatusChamado)
                    <div class="form-group">
                        @Html.Label("Responsável Atendimento", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.ResponsavelChamado.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ResponsavelChamado.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Data Atendimento", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10 date" id='datetimepicker2'>
                            @Html.Editor("Data", new { htmlAttributes = new { @class = "form-control datepicker", Style = "max-width:100px" } })
                            @Html.ValidationMessageFor(m => m.DataHoraAtendimento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Hora Atendimento", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10 date" id='timepicker'>
                            @Html.Editor("Hora", new { htmlAttributes = new { @class = "form-control timepicker", Style = "max-width:70px" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Classificação", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.Classificacao, (SelectList)ViewBag.SetorDestinoClassificacao, "-- Selecione a Classificação --", new { @class = "form-control Classificacao" })
                            @Html.ValidationMessageFor(m => m.Classificacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("SubClassificação", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.SubClassificacao, new SelectList(string.Empty, "Id", "Nome"), "-- Selecione a SubClassificação --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.SubClassificacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ErroOperacional, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(m => m.ErroOperacional, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ErroOperacional, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Solucao, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Solucao, htmlAttributes: new { @class = "form-control", Style = "max-width:430px" })
                            @Html.ValidationMessageFor(model => model.Solucao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Encerrar" class="btn btn-default" />
                            <input type="button" value="Cancelar" class="btn btn-default" data-dismiss="modal" />
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
    <script type="text/javascript">
        //Dropdownlist Selectedchange event
        $(".Classificacao").change(function () {
            $("#SubClassificacao").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("RetornaSubClassPorClass", "Chamado")',
                dataType: 'json',
                data: { selectedValue: $(".Classificacao").val() },
                success: function (subclasses) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#SubClassificacao").append('<option value="">-- Selecione a SubClassificação --</option>');
                    $.each(subclasses, function (i, subclass) {
                        $("#SubClassificacao").append('<option value="'
                        + subclass.Value + '">'
                        + subclass.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve SubClassificacoes.' + ex);
                }
            });
            return false;
        });

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            language: 'pt-BR',
            autoclose: true
        }); //Initialise any date pickers

        $('#Hora').focusin(function () {
            $('#Hora').mask("99:99");
        });
    </script>
    @*<script type="text/javascript">
            $(".timepicker").datetimepicker({
                pickDate: false
            });
        </script>*@

    @*<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
