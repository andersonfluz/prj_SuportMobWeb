@model prj_chamadosBRA.Models.Chamado
@{
    ViewBag.Title = "Novo Chamado";
}
<h2>Novo Chamado</h2>

@using (Html.BeginForm("Create", "Chamado", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "create" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Assunto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", Style = "height:130px" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control", Style = "height:130px" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Anexo", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="anexo" name="upload" />
                @Html.Label("Tamanho Maximo do Arquivo: 10Mb.")
            </div>
        </div>
        @if ((bool)Session["TipoChamadoVisivel"])
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TipoChamado, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.TipoChamado, "1")<label>&nbsp;Totvs RM</label>
                    <label>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;</label>
                    @Html.RadioButtonFor(model => model.TipoChamado, "2")<label>&nbsp;Outros</label>
                    <p>@Html.ValidationMessageFor(model => model.TipoChamado, "", new { @class = "text-danger" })</p>
                </div>

            </div>
        }
        @if ((bool)Session["ObraVisivel"])
        {
            <div class="form-group">
                @Html.Label("Obra Destino", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.ObraDestino, new SelectList(new prj_chamadosBRA.Repositories.ObraDAO().BuscarObrasPorUsuario(ViewBag.UserId), "IDO", "Descricao"), "-- Selecione a Obra --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ObraDestino, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if ((bool)Session["SetorVisivel"])
        {
            if (Session["PerfilUsuario"].ToString() != "1")
            {
                <div class="form-group">
                    @Html.Label("Setor Destino", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SetorDestino, new SelectList(new prj_chamadosBRA.Repositories.SetorDAO().BuscarSetoresPorObra(ViewBag.SetorDestino), "Id", "Nome"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SetorDestino, "", new { @class = "text-danger validacaoSetor" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.Label("Setor Destino", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SetorDestino, new SelectList(string.Empty, "Id", "Nome"), "-- Selecione o Setor --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SetorDestino, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="salvar" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Voltar para Acompanhamento", "Index")
</div>
@if (TempData["notice"] != null)
{
    <div id="modalNotice" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Atenção</h4>
                </div>
                <div class="modal-body">
                    <p class="text-danger"><strong>@TempData["notice"]</strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(window).load(function () {
            if ($('#notice').val() != "") {
                //alert($('#notice').val());
                $('#modalNotice').modal('show');
            }
        });
        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#ObraDestino").change(function () {
                $("#SetorDestino").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaSetoresPorObra", "Chamado")',
                    dataType: 'json',
                    data: { selectedValue: $("#ObraDestino").val() },
                    success: function (setores) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#SetorDestino").append('<option value="">-- Selecione o Setor --</option>');
                        $.each(setores, function (i, setor) {
                            $("#SetorDestino").append('<option value="'
                            + setor.Value + '">'
                            + setor.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve setores.' + ex);
                    }
                });
                return false;
            })
        });

    </script>
}
