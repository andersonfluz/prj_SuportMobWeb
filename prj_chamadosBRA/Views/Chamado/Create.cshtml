@model prj_chamadosBRA.Models.NovoChamadoViewModel
@{
    ViewBag.Title = "Novo Chamado";
}
<h2>Novo Chamado @ViewBag.NomeObra</h2>

@using (Html.BeginForm("Create", "Chamado", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "create" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" value="${ViewData.ModelState.IsValid}" id="validador" name="validador" />

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Assunto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", Style = "height:130px" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control", Style = "height:130px" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Anexo", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="anexo" name="upload" />
                @Html.Label("Tamanho Maximo do Arquivo: 10Mb.")
            </div>
        </div>
        @if ((bool)Session["TipoChamadoVisivel"]){@Html.Partial("_ChamadoTipoChamadoPartial", Model);
        }

        @if ((bool)Session["ObraVisivel"]){@Html.Partial("_ChamadoObraPartial", Model);
        }

        @if ((bool)Session["SetorVisivel"]){@Html.Partial("_ChamadoSetorPartial", Model);
        }

        @if ((bool)Session["SelecionarResponsavelAbertura"]){@Html.Partial("_ChamadoOutroResponsavelPartial", Model);
        }
        
        <p></p>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="salvar" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
                }
<div>
    @Html.ActionLink("Voltar para Acompanhamento", "Index")
</div>
@if (TempData["notice"] != null)
{
    <div id="modalNotice" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Atenção</h4>
                </div>
                <div class="modal-body">
                    <p class="text-danger"><strong>@TempData["notice"]</strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $("#accordion").accordion({
                collapsible: true,
                autoHeight: false,
                active: false
            });
        });
        $(document).ready(function () {
            $(".hide-btn").click(function () {
                $("#pnlResponsavelAbertura").collapse('hide');
            });
        });
    </script>
    <script type="text/javascript">
        $(window).load(function () {
            if ($('#notice').val() != "") {
                //alert($('#notice').val());
                $('#modalNotice').modal('show');
            }
        });
        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $('#salvar').click(function () {
                var isValid = @ViewData.ModelState.IsValid;
                if (!isValid) {
                    waitingDialog.hide();
                } else {
                    waitingDialog.show('Salvando Chamado...');
                }
            });
            $("#ObraDestino").change(function () {
                $("#SetorDestino").empty();
                $("#ResponsavelAberturaChamado").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaSetoresPorObra", "Chamado")',
                    dataType: 'json',
                    data: { selectedValue: $("#ObraDestino").val() },
                    success: function (setores) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#SetorDestino").append('<option value="">-- Selecione o Setor --</option>');
                        $.each(setores, function (i, setor) {
                            $("#SetorDestino").append('<option value="'
                            + setor.Value + '">'
                            + setor.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }
                });
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("RetornaUsuariosPorObra", "Chamado")',
                    dataType: 'json',
                    data: { selectedValue: $("#ObraDestino").val() },
                    success: function (usaurios) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#ResponsavelAberturaChamado").append('<option value="">-- Selecione o usuário --</option>');
                        $.each(usaurios, function (i, usuario) {
                            $("#ResponsavelAberturaChamado").append('<option value="'
                            + usuario.Value + '">'
                            + usuario.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }
                });
                return false;
            })

        });
    </script>
}
